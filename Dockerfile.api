# Dockerfile.api
# syntax=docker/dockerfile:1

########################
# Builder stage
########################
FROM python:3.11-slim-bookworm AS builder
WORKDIR /app

# non-interactive apt (avoid tzdata prompts) and build deps for SciPy if compilation required
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
      build-essential gcc gfortran python3-dev \
      libopenblas-dev liblapack-dev libblas-dev pkg-config \
      wget git ca-certificates curl \
      rustc cargo \
    && rm -rf /var/lib/apt/lists/*

# copy requirements and install
COPY requirements.txt .
RUN python -m pip install --upgrade pip setuptools wheel meson ninja
RUN pip install --no-cache-dir -r requirements.txt

# copy app code
COPY . .

########################
# Final runtime stage
########################
FROM python:3.11-slim-bookworm
WORKDIR /app

ENV DEBIAN_FRONTEND=noninteractive

# create non-root user
RUN useradd --create-home --shell /bin/bash appuser

# install minimal runtime libs (use libatlas3-base for portable BLAS/LAPACK)
RUN apt-get update && apt-get install -y --no-install-recommends \
      libatlas3-base ca-certificates curl \
    && rm -rf /var/lib/apt/lists/*

# copy installed python packages and app code from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app /app

# permissions and user
RUN chown -R appuser:appuser /app
USER appuser

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=3s CMD curl -f http://127.0.0.1:8000/health || exit 1

CMD ["uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000"]
